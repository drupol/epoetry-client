diff --git a/src/Phpro/SoapClient/CodeGenerator/Assembler/GetterAssembler.php b/src/Phpro/SoapClient/CodeGenerator/Assembler/GetterAssembler.php
index 6cc84ab..afd394e 100644
--- a/src/Phpro/SoapClient/CodeGenerator/Assembler/GetterAssembler.php
+++ b/src/Phpro/SoapClient/CodeGenerator/Assembler/GetterAssembler.php
@@ -59,15 +59,17 @@ class GetterAssembler implements AssemblerInterface
             $methodGenerator->setBody(sprintf('return $this->%s;', $property->getName()));
 
             if ($this->options->useReturnType()) {
-                $methodGenerator->setReturnType($property->getCodeReturnType());
+                $returnType = $this->options->useReturnNull() ? '?' . $property->getCodeReturnType() : $property->getCodeReturnType();
+                $methodGenerator->setReturnType($returnType);
             }
 
             if ($this->options->useDocBlocks()) {
+                $propertyType = $this->options->useReturnNull() ? $property->getType() . '|null' : $property->getType();
                 $methodGenerator->setDocBlock(DocBlockGeneratorFactory::fromArray([
                     'tags' => [
                         [
                             'name'        => 'return',
-                            'description' => $property->getType(),
+                            'description' => $propertyType,
                         ],
                     ],
                 ]));
diff --git a/src/Phpro/SoapClient/CodeGenerator/Assembler/GetterAssemblerOptions.php b/src/Phpro/SoapClient/CodeGenerator/Assembler/GetterAssemblerOptions.php
index 20c5587..a8060a9 100644
--- a/src/Phpro/SoapClient/CodeGenerator/Assembler/GetterAssemblerOptions.php
+++ b/src/Phpro/SoapClient/CodeGenerator/Assembler/GetterAssemblerOptions.php
@@ -21,6 +21,11 @@ class GetterAssemblerOptions
      */
     private $returnType = false;
 
+    /**
+     * @var bool
+     */
+    private $returnNull = false;
+
     /**
      * @var bool
      */
@@ -96,4 +101,25 @@ class GetterAssemblerOptions
     {
         return $this->docBlocks;
     }
+
+    /**
+     * @param bool $returnNull
+     *
+     * @return GetterAssemblerOptions
+     */
+    public function withReturnNull(bool $returnNull = true): GetterAssemblerOptions
+    {
+        $new = clone $this;
+        $new->returnNull = $returnNull;
+
+        return $new;
+    }
+
+    /**
+     * @return bool
+     */
+    public function useReturnNull(): bool
+    {
+        return $this->returnNull;
+    }
 }
diff --git a/test/PhproTest/SoapClient/Unit/CodeGenerator/Assembler/GetterAssemblerTest.php b/test/PhproTest/SoapClient/Unit/CodeGenerator/Assembler/GetterAssemblerTest.php
index 652ca40..897571a 100644
--- a/test/PhproTest/SoapClient/Unit/CodeGenerator/Assembler/GetterAssemblerTest.php
+++ b/test/PhproTest/SoapClient/Unit/CodeGenerator/Assembler/GetterAssemblerTest.php
@@ -93,6 +93,39 @@ class MyType
     }
 }
 
+CODE;
+
+        $this->assertEquals($expected, $code);
+    }
+
+    /**
+     * @test
+     */
+    public function it_assembles_with_return_null()
+    {
+        $options = (new GetterAssemblerOptions())
+            ->withReturnType()
+            ->withReturnNull();
+        $assembler = new GetterAssembler($options);
+
+        $context = $this->createContext('prop2');
+        $assembler->assemble($context);
+
+        $code = $context->getClass()->generate();
+        $expected = <<<CODE
+namespace MyNamespace;
+
+class MyType
+{
+    /**
+     * @return int|null
+     */
+    public function getProp2() : ?int
+    {
+        return \$this->prop2;
+    }
+}
+
 CODE;
 
         $this->assertEquals($expected, $code);

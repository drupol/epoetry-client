<?xml version='1.0' encoding='UTF-8'?>
<wsdl:definitions name="TicketValidationService" targetNamespace="https://ecas.ec.europa.eu/cas/schemas"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="https://ecas.ec.europa.eu/cas/schemas"
                  xmlns:ecas="https://ecas.ec.europa.eu/cas/schemas"
                  xmlns:wsoap11="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:wsoap12="http://schemas.xmlsoap.org/wsdl/soap12/"
                  xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"
                  xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:types>
        <xsd:schema targetNamespace="https://ecas.ec.europa.eu/cas/schemas" xmlns:ecas="https://ecas.ec.europa.eu/cas/schemas"
                    elementFormDefault="qualified" attributeFormDefault="unqualified" version="8.3.0" xml:lang="EN">
            <xsd:include schemaLocation="https://ecas.ec.europa.eu/cas/schemas/ecas.xsd"/>
            <xsd:element name="serviceRequest">
                <xsd:annotation>
                    <xsd:documentation>Request to ECAS to a validate a Service- or a Proxy-Ticket</xsd:documentation>
                    <xsd:appinfo>version 1.9.2</xsd:appinfo>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="service" type="xsd:token">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The service is the protected URL the user wants to access.
                                    It is also the URL where the ECAS server has to redirect the user to after successful authentication.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="ticket" type="xsd:token">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The ticket is a token returned by the ECAS server.
                                    It uniquely identifies a user.
                                    It is only valid once and for a short period of time.
                                    It is associated to one service and cannot be validated for another service.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="renew" type="xsd:boolean" minOccurs="0" default="false">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The renew parameter can be used to disable Single-Sign-On and force users to
                                    authenticate again (entering their credentials again).
                                    It can be used to confirm the user's identity for a sensitive transaction (electronic sign-off) or
                                    by sensitive applications that wish not to participate in the Web Single-Sign-On session.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="pgtUrl" type="xsd:anyURI" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The ProxyGrantingTicket URL is the callback URL to which the ECAS server connects to send Proxy-Granting-Tickets.
                                    This must be an httpS URL using a CommisSign PKI certificate.
                                    It must acknowledge PGT submissions with a proxySuccess message.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="groups" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The groups parameter is the sequence of the CUD groups the application wants ECAS to check and return.
                                    If the groups parameter is omitted, ECAS does not return any group.
                                </xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="group" type="xsd:token" maxOccurs="unbounded"/>
                                </xsd:sequence>
                            </xsd:complexType>
                            <xsd:unique name="group-uniqueness">
                                <xsd:annotation>
                                    <xsd:documentation>
                                        The group value must be unique within the groups sequence.
                                    </xsd:documentation>
                                </xsd:annotation>
                                <xsd:selector xpath="ecas:group"/>
                                <xsd:field xpath="."/>
                            </xsd:unique>
                        </xsd:element>
                        <xsd:element name="userDetails" type="xsd:boolean" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>
                                    If set to true, ECAS returns user attributes.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="clientFingerprint" type="xsd:token" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The client fingerprint is an MBUN token sent by the client application to prevent man-in-the-middle attacks.
                                    It is used when login transactions are initiated.
                                    (Only used in login transactions).
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="sessionId" type="xsd:token" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The sessionId is a digest used in login transactions to identity session loss.
                                    (Only used in login transactions).
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="version" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The version parameter specifies which version of the ECAS protocol to use.
                                    If omitted, the latest protocol is used.
                                    It can be used by custom clients that targetted a specific protocol version with a given XML namespace.
                                    Note that this WSDL is also constrained by its requested version and that you must query it
                                    by adding the version to it to see other values (e.g. adding "?version=1.3" to the WSDL URL).
                                </xsd:documentation>
                            </xsd:annotation>
                            <xsd:simpleType>
                                <xsd:restriction base="xsd:token">
                                    <xsd:enumeration value="CURRENT"/>
                                </xsd:restriction>
                            </xsd:simpleType>
                        </xsd:element>
                        <xsd:element name="ticketTypes">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The "ticketTypes" property is the sequence of ECAS ticket-types accepted by the application.
                                    If users try to access the application with other ticket types than the ones specified here,
                                    an INVALID_TICKET error code is returned by ECAS.
                                </xsd:documentation>
                                <xsd:appinfo>since 1.11.0</xsd:appinfo>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="ticketType" type="ecas:ticketType" maxOccurs="3" />
                                </xsd:sequence>
                            </xsd:complexType>
                            <xsd:unique name="ticketType-uniqueness">
                                <xsd:annotation>
                                    <xsd:documentation>
                                        The ticketType value must be unique within the ticketTypes sequence.
                                    </xsd:documentation>
                                </xsd:annotation>
                                <xsd:selector xpath="ecas:ticketType"/>
                                <xsd:field xpath="."/>
                            </xsd:unique>
                        </xsd:element>
                        <xsd:element name="assuranceLevel" type="ecas:assuranceLevelType">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The "assuranceLevel" property is the level of assurance in the user's identity
                                    the application requires to grant access.
                                    If users with assurance levels lower than the one configured here try to access the application,
                                    an INVALID_USER error code is returned by EU Login.
                                </xsd:documentation>
                                <xsd:appinfo>since 1.11.0</xsd:appinfo>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="proxyGrantingProtocol" type="ecas:proxyGrantingProtocolType" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The "proxyGrantingProtocol" property is used to specify the protocol to be used
                                    to obtain ProxyGrantingTickets (PGT).
                                </xsd:documentation>
                                <xsd:appinfo>since 1.11.0</xsd:appinfo>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="userAddress" type="ecas:iPv4AddressType" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The "userAddress" property is used to specify the IP v4 Address of the end user
                                    actually at the origin of the ticket validation request.
                                    This information is needed for audit or forensics capabilities.
                                </xsd:documentation>
                                <xsd:appinfo>since 3.1.2</xsd:appinfo>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="singleSignOut" type="xsd:boolean" minOccurs="0" default="false">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The "singleSignOut" parameter is used to specify that the Single-Sign-Out protocol of
                                    CAS 3 is supported for this Ticket validation.
                                    If the user logs out of ECAS, a Single-Sign-Out message will be sent to the
                                    target service to indicate the end of the Single-Sign-On session.
                                    The official ECAS client supports this feature.
                                    See the ECAS Client Advance Guide for details.
                                    See https://wiki.jasig.org/display/CASUM/Single+Sign+Out and
                                        https://wiki.jasig.org/display/CASC/Configuring+Single+Sign+Out
                                    for the original CAS documentation.
                                    Note that if the client technology is known to support this feature, this
                                    parameter can be omitted.
                                </xsd:documentation>
                                <xsd:appinfo>since 1.20.0</xsd:appinfo>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="acceptStrengths">
                            <xsd:annotation>
                                <xsd:documentation>
                                    Deprecated since 8.2.0.
                                    Use authenticationLevel instead.

                                    The "acceptStrengths" property is the sequence of ECAS authentication strengths
                                    accepted by the client application.
                                    If users try to access the application with other strengths than the ones specified
                                    here, an INVALID_STRENGTH error usually occurs at the level of the ECAS Client.
                                </xsd:documentation>
                                <xsd:appinfo>since 3.6.0</xsd:appinfo>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="strength" type="ecas:strengthType" maxOccurs="unbounded" />
                                </xsd:sequence>
                            </xsd:complexType>
                            <xsd:unique name="serviceRequest-acceptStrengths-strength-uniqueness">
                                <xsd:annotation>
                                    <xsd:documentation>
                                        Each strength must be unique within the acceptStrengths in the serviceRequest.
                                    </xsd:documentation>
                                </xsd:annotation>
                                <xsd:selector xpath="ecas:strength"/>
                                <xsd:field    xpath="."/>
                            </xsd:unique>
                        </xsd:element>
                        <xsd:element name="authenticationLevel" type="ecas:authenticationLevelType">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The "authenticationLevel" property is the level of assurance in the user's authentication
                                    the application requires to grant access.
                                    If users with authentication levels lower than the one configured here try to access the application,
                                    an INSUFFICIENT_AUTHENTICATION_LEVEL error code is returned by EU Login.

                                    The "authenticationLevel" is meant to replace the "acceptStrengths" property.
                                </xsd:documentation>
                                <xsd:appinfo>since 8.2.0</xsd:appinfo>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:schema>
    </wsdl:types>
    <wsdl:message name="validateIn">
        <wsdl:part element="serviceRequest" name="serviceRequestPart"/>
    </wsdl:message>
    <wsdl:message name="validateOut">
        <wsdl:part element="serviceResponse" name="serviceResponsePart"/>
    </wsdl:message>
    <wsdl:message name="httpRequest">
        <wsdl:part name="service"               type="xsd:token"/>
        <wsdl:part name="ticket"                type="xsd:token"/>
        <wsdl:part name="pgtUrl"                type="xsd:token"/>
        <wsdl:part name="groups"                type="xsd:token"/>
        <wsdl:part name="renew"                 type="xsd:token"/>
        <wsdl:part name="userDetails"           type="xsd:token"/>
        <wsdl:part name="clientFingerprint"     type="xsd:token"/>
        <wsdl:part name="sessionId"             type="xsd:token"/>
        <wsdl:part name="version"               type="xsd:token"/>
        <wsdl:part name="ticketTypes"           type="xsd:token"/>
        <wsdl:part name="assuranceLevel"        type="xsd:token"/>
        <wsdl:part name="proxyGrantingProtocol" type="xsd:token"/>
        <wsdl:part name="userAddress"           type="xsd:token"/>
        <wsdl:part name="singleSignOut"         type="xsd:token"/>
        <wsdl:part name="acceptStrengths"       type="xsd:token"/>
        <wsdl:part name="authenticationLevel"   type="xsd:token"/>
    </wsdl:message>
    <wsdl:portType name="TicketValidationIntf">
        <wsdl:operation name="validate">
            <wsdl:input message="validateIn"/>
            <wsdl:output message="validateOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="TicketValidationHttpPostIntf">
        <wsdl:operation name="validate">
           <wsdl:input message="httpRequest"/>
           <wsdl:output message="validateOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="TicketValidationServiceSoap11Binding" type="TicketValidationIntf">
        <wsoap11:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="validate">
            <wsoap11:operation style="document"/>
            <wsdl:input>
                <wsoap11:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <wsoap11:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="TicketValidationServiceSoap12Binding" type="TicketValidationIntf">
        <wsoap12:binding style="document" transport="http://www.w3.org/2003/05/soap/bindings/HTTP/"/>
        <wsdl:operation name="validate">
            <wsoap12:operation style="document"/>
            <wsdl:input>
                <wsoap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <wsoap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="TicketValidationServiceHttpPostBinding" type="TicketValidationHttpPostIntf">
        <http:binding verb="POST"/>
        <wsdl:operation name="validate">
            <http:operation location="/post"/>
            <wsdl:input>
                <mime:content type="application/x-www-form-urlencoded"/>
            </wsdl:input>
            <wsdl:output>
                <mime:mimeXml part="serviceResponsePart"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="TicketValidationService">
        <wsdl:port binding="TicketValidationServiceSoap11Binding" name="TicketValidationServiceSoap11Port">
            <wsoap11:address location="https://ecas.ec.europa.eu/cas/ws/TicketValidationService/soap/1.1"/>
        </wsdl:port>
        <wsdl:port binding="TicketValidationServiceSoap12Binding" name="TicketValidationServiceSoap12Port">
            <wsoap12:address location="https://ecas.ec.europa.eu/cas/ws/TicketValidationService/soap/1.2"/>
        </wsdl:port>
        <wsdl:port binding="TicketValidationServiceHttpPostBinding" name="TicketValidationServiceHttpPostPort">
           <http:address location="https://ecas.ec.europa.eu/cas/ws/TicketValidationService/http"/>
        </wsdl:port>
        <wsdl:port binding="TicketValidationServiceSoap11Binding" name="TicketValidationService2WaySSLSoap11Port">
            <wsoap11:address location="https://ecas.cc.cec.eu.int:7003/cas/ws/TicketValidationService/soap/1.1"/>
        </wsdl:port>
        <wsdl:port binding="TicketValidationServiceSoap12Binding" name="TicketValidationService2WaySSLSoap12Port">
            <wsoap12:address location="https://ecas.cc.cec.eu.int:7003/cas/ws/TicketValidationService/soap/1.2"/>
        </wsdl:port>
        <wsdl:port binding="TicketValidationServiceHttpPostBinding" name="TicketValidationService2WaySSLHttpPostPort">
           <http:address location="https://ecas.cc.cec.eu.int:7003/cas/ws/TicketValidationService/http"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>